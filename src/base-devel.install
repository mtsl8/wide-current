~~~ this has not been run in a terminal yet, might/probably work ~~~

# todo: pgp key setup

~~~ install:

mkdir -p $HOME/devel/{source,repo,artools}

# /etc/pacman.conf :
# at the very end; (use your home directory name):
```
[local]
Server = file:///home/$user/devel/repo/local.db.tar.gz
```

sudo pacman -S artools
mkdir -p $HOME/.config/artools/
cp /etc/artools/artools-base.conf $HOME/.config/artools/

```
WORKSPACE_DIR="$HOME/devel/artools"
```
cp /usr/share/artools/makepkg.conf $HOME/.config/artools/

```
#line43:
CFLAGS="-march=native ... "

#line50:
MAKEFLAGS="-j$threads" 

#line121:
#-- Destination: specify a fixed directory where all packages will be placed
PKGDEST=$HOME/devel/repo/

#line129:
#-- Packager: name(/email) of the person or organization building packages
PACKAGER="$name <$email>"
#-- Specify a key to use for package signing (or leave commented out)
GPGKEY="$keyfile"
```

~~~ setup

echo '
#these two belong in an earlier script
alias grubpdate="grub mkconfig -o /boot/grub/grub.cfg"
alias pagman="sudo pacman -S"

export REPODIR="$HOME/devel/repo/"
export REPO="$REPODIR/local.db.tar.gz"

## to use these aliases, first set PKG="name-of-package"
## caveats: package must exist in aur; must dependencies already or does it request.. i think the latter, shall see

#execute anywhere to add a completed package to local db and sync pacman:
alias pkg-add="repo-add $REPO $REPODIR/$PKG.pkg.tar.xz && sudo pacman -Sy"

#execute in ~/devel/source/ to grab a PKGBUILD from the AUR
alias pkg-clone="git clone "https://aur.archlinux.org/$PKG.git" && cd $PKG"

#execute in source/$PKG/ directory to a) build and install b) pull updates, build and install
alias pkg-install="buildpkg-world && pkg-add && pagman $PKG"
alias pkg-update="git pull "https://aur.archlinux.org/$PKG.git" && pkg-install"
' >> ~/.bashrc

. ~/.bashrc

~~~ use
cd ~/devel/source/

PKG="name-of-package"
pkg-clone && pkg-install
# or pkg-update for existing clones
